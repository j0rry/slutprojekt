

class Battle {

    int width = 30;
    int position = 0;
    bool goingRight = true;
    int middle;
    bool attacking = true;
    int speed = 120; // hastighet / delay pÃ¥ visaren.
    
    public Battle(Player p, Enemy e){
        middle = width /2; // rÃ¤kna ut vart mitten Ã¤r
        Fight(p,e);
    }

    void Fight(Player player, Enemy enemy){
        while(player.hp > 0 && enemy.HP > 0){
            attacking = true; // sÃ¤tter attacking pÃ¥, gÃ¶r sÃ¥ att man kan fortsÃ¤tta att attakera om det finns hp kvar pÃ¥ motstÃ¥ndaren.
            position = 0; // sÃ¤tter tillbaka visaren i bÃ¶rjan pÃ¥ timings banan
            goingRight = true; // riktning
            Console.Clear();
            while(attacking){
                Console.SetCursorPosition(0,0);
                Utility.WriteColoredText($"Health: {player.hp}", ConsoleColor.Green, true);
                Utility.WriteColoredText($"Enemy Health: {enemy.HP}", ConsoleColor.Red, true);
                Console.SetCursorPosition(0,4); // sÃ¤tter cursor i bÃ¶rjan
                Console.Write(new string('-', width)); // skriver ut timing banan
                Console.SetCursorPosition(middle, 4); // gÃ¥r till mitten med cursor
                Utility.WriteColoredText("â–ˆ", ConsoleColor.Green, false); // skriver ut mitten

                Console.SetCursorPosition(position, 4); // sÃ¤tter cursor i bÃ¶rjan
                Console.Write("|"); // ritar visaren

                if(Console.KeyAvailable){
                    var key = Console.ReadKey(true).Key;
                    if(key == ConsoleKey.Spacebar){ // om man trycker ner space knappen
                        attacking = false; // sÃ¤tter attacking false
                        Console.SetCursorPosition(0,5); // sÃ¤tter cursor nedanfÃ¶r fÃ¶r att skriva ut resultat
                        if(position == middle || position == middle + 1 || position == middle -1){ // om positionen av visaren Ã¤r i mitten 
                            enemy.TakeDamage(player.damage); // ta damage
                            Utility.WriteColoredText("ðŸŽ¯ hit!", ConsoleColor.Green, true); // skriver ut trÃ¤ff
                            speed -= 10; // Ã„ndrar speed fÃ¶r varje hit, gÃ¶r det snabbare
                            Thread.Sleep(120);
                        }
                        else {
                            Console.SetCursorPosition(0,5); //sÃ¤tter cursor under
                            player.TakeDamage(enemy.Damage); // ta damage pÃ¥ spelaren med motstÃ¥ndarens damage
                            Utility.WriteColoredText($"Enemy skadade dig med {enemy.Damage} damage", ConsoleColor.Red, true); // skriv ut 
                            Thread.Sleep(120);
                        }
                        break; // avslutar attack loop
                    }
                }

                Thread.Sleep(speed); // lÃ¤gger till delayn, hÃ¤r Ã¤ndras speeden fÃ¶r visaren
                
                // FÃ¶rflyttar visaren i rÃ¤tt rikting. Kollar om den gÃ¥r hÃ¶ger eller inte
                if(goingRight) 
                    position++;
                else
                    position--;

                // Ã¤ndrar riktning om den har nÃ¥tt till andra sidan.
                if (position >= width - 1)
                    goingRight = false;
                else if (position <= 0)
                    goingRight = true;
            }
            
            Console.SetCursorPosition(0, 4); // lÃ¤gger cursor
        }        
    }

    void Instructions(){
        System.Console.WriteLine("Clicka space nÃ¤r | Ã¤r i mitten fÃ¶r att attackera!");
    }



}
